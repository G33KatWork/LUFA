#
#             LUFA Library
#     Copyright (C) Dean Camera, 2012.
#
#  dean [at] fourwalledcubicle [dot] com
#           www.lufa-lib.org
#

LUFA_BUILD_MODULES        += DFU
LUFA_BUILD_TARGETS        += flip flip-ee dfu dfu-ee
LUFA_BUILD_MANDATORY_VARS += MCU TARGET
LUFA_BUILD_OPTIONAL_VARS  += 

# -----------------------------------------------------------------------------
#               LUFA DFU Bootloader Buildsystem Makefile Module.
# -----------------------------------------------------------------------------
# DESCRIPTION:
#   Provides a set of targets to re-program a device currently running a DFU
#   class bootloader with a project's FLASH and EEPROM files.
# -----------------------------------------------------------------------------
# TARGETS:
#
#    flip                      - Program FLASH into target via Atmel FLIP
#    flip-ee                   - Program EEPROM into target via Atmel FLIP
#    dfu                       - Program FLASH into target via dfu-programmer
#    dfu-ee                    - Program EEPROM into target via dfu-programmer
#
# MANDATORY PARAMETERS:
#
#    MCU                       - Microcontroller device model name
#    TARGET                    - Application name
#
# OPTIONAL PARAMETERS:
#
#    (None)
#
# -----------------------------------------------------------------------------

# Sanity-check values of mandatory user-supplied variables
MCU            ?= $(error Makefile MCU value not set.)
TARGET         ?= $(error Makefile TARGET value not set.)

# Output Messages
MSG_COPY_CMD   := ' [CP]      :'
MSG_REMOVE_CMD := ' [RM]      :'
MSG_DFU_CMD    := ' [DFU]     :'

flip: $(TARGET).hex
	@echo $(MSG_DFU_CMD) Programming FLASH with batchisp using \"$(TARGET).hex\"
	batchisp -hardware usb -device $(MCU) -operation erase f
	batchisp -hardware usb -device $(MCU) -operation loadbuffer $(TARGET).hex program
	batchisp -hardware usb -device $(MCU) -operation start reset 0

flip-ee: $(TARGET).eep
	@echo $(MSG_DFU_CMD) Copying EEP file to temporary file \"$(TARGET)eep.hex\"
	cp $(TARGET).eep $(TARGET)eep.hex
	@echo $(MSG_DFU_CMD) Programming EEPROM with batchisp using \"$(TARGET).eep\"
	batchisp -hardware usb -device $(MCU) -operation memory EEPROM erase
	batchisp -hardware usb -device $(MCU) -operation memory EEPROM loadbuffer $(TARGET)eep.hex program
	batchisp -hardware usb -device $(MCU) -operation start reset 0
	@echo $(MSG_DFU_CMD) Removing temporary file \"$(TARGET)eep.hex\"
	rm $(TARGET)eep.hex
	
dfu: $(TARGET).hex
	@echo $(MSG_DFU_CMD) Programming FLASH with dfu-programmer using \"$(TARGET).hex\"
	dfu-programmer $(MCU) erase
	dfu-programmer $(MCU) flash $(TARGET).hex
	dfu-programmer $(MCU) reset

dfu-ee: $(TARGET).hex $(TARGET).eep
	@echo $(MSG_DFU_CMD) Programming EEPROM with dfu-programmer using \"$(TARGET).eep\"
	dfu-programmer $(MCU) eeprom-flash $(TARGET).eep
	dfu-programmer $(MCU) reset